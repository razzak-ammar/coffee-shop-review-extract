import Header from '@/components/Header';
import Head from 'next/head';
import Image from 'next/image';
import { useState } from 'react';
import prisma from '../prisma-client';

export default function Import(props) {
  const [coffeehouseName, setCoffeeHouseName] = useState('');
  const [reviewTitle, setReviewTitle] = useState('');
  const [reviewText, setReviewText] = useState('');
  const [url, setUrl] = useState('');
  const [alert, setAlert] = useState('');
  const [recentlyAdded, setRecentlyAdded] = useState([]);

  async function submit_input() {
    console.log(coffeehouseName, url);
    let response = await fetch('/api/add', {
      method: 'POST',
      body: JSON.stringify({
        coffeehouse_id: coffeehouseName,
        review_title: reviewTitle,
        review_text: reviewText
      }),
      headers: {
        'content-type': 'application/json'
      }
    });
    console.log('SUBMITTED');
    if (response.ok) {
      setAlert('Successfully created review');
      setCoffeeHouseName('');
      setReviewText('');
      setReviewTitle('');

      setTimeout(() => {
        setAlert('');
      }, 2000);

      let new_review = await response.json();

      setRecentlyAdded([...recentlyAdded, new_review]);
    }
    console.log(response.ok);
  }

  return (
    <>
      <Head>
        <title>Import | Reviews Analyzer</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <Header />
        <div className='container my-3'>
          <div className='card'>
            <div className='card-body'>
              <div className='container'>
                {alert.length > 1 && (
                  <div class='alert alert-primary my-3' role='alert'>
                    {alert}
                  </div>
                )}
                <h3 className='pt-3'>Add a Review</h3>
                <select
                  className='form-select my-3'
                  aria-label='Default select example'
                  value={coffeehouseName}
                  onChange={(e) => setCoffeeHouseName(e.target.value)}
                >
                  <option defaultValue={true}>Choose a Coffeehouse</option>
                  {props.coffeehouses.map((cf) => (
                    <option value={cf.id} key={cf.id}>
                      {cf.name}
                    </option>
                  ))}
                </select>
                <div className='input-group'>
                  <input
                    type='text'
                    className='form-control py-2 my-1'
                    placeholder='Review Title'
                    value={reviewTitle}
                    onChange={(e) => setReviewTitle(e.target.value)}
                  />
                </div>
                <div className='input-group mb-3'>
                  <textarea
                    type='text'
                    className='form-control py-2 my-1'
                    placeholder='Review Text'
                    value={reviewText}
                    onChange={(e) => setReviewText(e.target.value)}
                  />
                </div>
                <button className='btn btn-primary ms-1' onClick={submit_input}>
                  Load
                </button>
              </div>
            </div>
          </div>
          <div className='card my-3'>
            <div className='card-body'>
              <h3>Recently Added Reviews</h3>
              <div className='list-group'>
                {recentlyAdded.length >= 0 ? (
                  recentlyAdded.map((review) => (
                    <li className='list-group-item' aria-current='true'>
                      <strong>{review.title}</strong>
                    </li>
                  ))
                ) : (
                  <p>No Reviews Added Recently</p>
                )}
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  let coffeehouses = await prisma.coffeeHouse.findMany({
    select: {
      name: true,
      id: true
    }
  });
  console.log(coffeehouses);
  return {
    props: {
      coffeehouses: coffeehouses
    } // will be passed to the page component as props
  };
}
